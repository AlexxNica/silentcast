#!/bin/bash

v=1.7
show_version() {
	echo Silentcast v$v
}

show_help() {
cat << EOF
When run without any args, silentcast creates a silent video, 
silentcast/temp.mkv, and an animated gif, silentcast/anim.gif, 
recording an area of the screen.

Usage: silentcast [-h -v]

    -h          display this help and exit
    -v		display version and exit

silentcast runs 2 other bash scripts that are part of the 
same package: genffcom and temptoanim
Look at those help outputs for more information. Even better,
view /usr/share/doc/silentcast/README.md with a markdown
viewer and get an animated gif demo made with silentcast, as
well as a step by step guide and a list of tips.
EOF
}

OPTIND=1
while getopts ":hv" opt
do 
	case $opt in
		h)
			show_help
			exit 0
			;;
		v)
			show_version
			exit 0
			;;
       	esac
done
shift "$((OPTIND-1))" # get rid of everything just processed leaving anything else as $1 $2 etc.

unset fps area_choice area ffcoms_running castnum rate arg_form silentcast_dir doc_dir working_dir tmp

ffcoms_running=`pgrep -f ffcom | wc -l`
if (($ffcoms_running > 1))
then
	echo "You are already doing a recording of a recording. Further nesting of silentcasts is not supported." \
	| yad --text-info --wrap --on-top --center --window-icon="$doc_dir/record.png" --title="Error" --text="<b>SILENTCAST ? </b>"
	exit -1
else
	let castnum=$ffcoms_running+1
fi

#defaults
fps=8
area_choice="Fullscreen"
area="f"
doc_dir=/usr/share/doc/silentcast
if ! [ -f $doc_dir/README.md ]
then 
	doc_dir="$( cd "$(dirname "$0")" ; pwd -P )"
fi

working_dir=~
df /tmp | grep -q tmpfs && tmp=/tmp || tmp=/dev/shm # offer /tmp if it's shared memory disk, otherwise /dev/shm (debian & ubuntu)

arg_form=`yad --form --on-top --center\
	--title="Silentcast v$v" \
	--window-icon="$doc_dir/record$castnum".png \
	--text='<tt>\
  <span background="white">                                        </span>\n\
  <span background="white">  For a demo, guide, and list of tips,  </span>\n\
  <span background="white">  click <a href="https://github.com/colinkeenan/silentcast/#silentcast">web README.md</a> or install a web  </span>\n\
  <span background="white">  browser addon for markdown and click  </span>\n\
  <span background="white">  <a href="file://'$doc_dir'/README.md">local README.md</a>                       </span>\n\
  <span background="white">                                        </span></tt>\n\
  \n\
 In the Working Directory specified below, silentcast \n\
 or silencast/silentcast will be created to contain \n\
 temp.mkv and anim.gif: Choose one or type it in.'\
  	--separator="," \
	--field="Working Directory":CBE \
	--field="Area to be recorded":CB \
	--field="Frames per second" \
	"$HOME"!"$tmp"!"other" \
	"Fullscreen"!"Transparent Window Interior"!"Interior of a Window"!"Entirety of a Window" 8`
(($? != 0)) && exit 1 #Cancel was clicked

working_dir="$(awk -F, '{print $1}' <<<"$arg_form")"         
if ! [ -d "$working_dir" ]
then
	echo "$working_dir is not an existing Directory, so the Silentcast directory can't be created there" \
	| yad --text-info --wrap --on-top --center --window-icon="$doc_dir/record.png" --title="Error" --text="<b>SILENTCAST ? </b>"
	exit -1
fi

area_choice="$(awk -F, '{print $2}' <<<"$arg_form")" # getting 2nd & 3rd fields this way only works when --separator=","
fps="$(awk -F, '{print $3}' <<<"$arg_form")"         

area=${area_choice,} # lower case first letter
area=${area:0:1}     # area is now one of f t i e

if (($castnum == 2))
then 
	mkdir -p $working_dir/silentcast/silentcast
	silentcast_dir=$working_dir/silentcast/silentcast
else
	mkdir -p $working_dir/silentcast 
	silentcast_dir=$working_dir/silentcast
	castnum=1
fi

source genffcom "-a"$area "-r"$fps "-d"$silentcast_dir $castnum 
(($? != 0)) && exit 1 #Cancel was clicked
bash $silentcast_dir/ffcom
(($? != 0)) && exit 1 #Cancel was clicked
source temptoanim $castnum $fps $working_dir

# End of file
