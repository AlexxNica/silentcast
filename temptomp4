#!/bin/bash

# Usage info
show_help() {
cat << EOF
temptomp4 converts temp.mkv to vid.mp4 by default, and ew-???.png to
vid.mp4 if -r is used.


Usage: temptomp4 [-h -s# -r# -d working_dir -k]

    -h          display this help and exit

    -s #        i.e. Silentcast # - the number of instances of Silentcast
                that are running

	# must be 0, 1, or 2 (default is 0 meaning temptomp4 was started
	outside of the Silentcast application)

	0: tries to convert ./temp.mkv (if working_dir is also 
	   specified, it will be ignored)
	1: tries to convert working_dir/silentcast/temp.mkv
	2: tries to convert working_dir/silentcast/silentcast/temp.mkv

    -r #        i.e. rate # or fps for making vid.mp4 from already existing 
                png images (see temptoanim -h for how to make png images)
	        # is a natural number (2 to 120) that should match the 
		frames per second used to create the png images

		(If -r is not used, png images will be ignored and vid.mp4
		will be made directly from temp.mkv at the same frame rate.)

    -k          keep all the png images (so don't delete them) This only
                matters if -r # was also specified because otherwise png
		images will be ignored
	        
    -d working_dir  
                defaults to the current directory and is where temptomp4 
                will expect to find the silentcast or silentcast/silentcast 
		directory

View /usr/share/doc/silentcast/README.md with a markdown viewer and 
get an animated gif demo made with silentcast, as well as a step by 
step guide and a list of tips.
EOF
}

#defaults

castnum=""
fps=0         # fps isn't needed if 0 since it referes to png images that aren't used by default
rm_png=true   # only matters if fps isn't 0

OPTIND=1
while getopts ":hs:r:kd:" opt
do 
	echo $OPTARG # I don't know why I have to echo $OPTARG to get it assigned, but I do
	case $opt in
		h)
			show_help
			exit 0
			;;
		s)
			case $OPTARG in
				1)
					castnum=1
					;;
				2)
					castnum=2
					;;
				[!012])
					echo "Invalid Silentcast#: -s$OPTARG  ('temptomp4 -h' for help)" >&2
					exit 1
					;;
			esac
			;;
		r)
			fps=$OPTARG 
			if ! [[ "$fps" =~ ^[0-9]+$ ]] && (($fps<2 || $fps>120)) 
			then
				echo "Invalid rate #: -r$OPTARG, it has to be 2 to 120. ('temptomp4 -h' for help)"
				exit 1
			fi
			;;
		k)
			rm_png=false
			;;
		d)
			working_dir="$OPTARG"
			;;
		\?) 
			echo "Invalid option: -$OPTARG  ('genffcom -h' for help)" >&2
			exit 1
			;;
	       	:)
		       	echo "Option -$OPTARG requires an argument." >&2
		       	exit 1
		       	;;
       	esac
done
shift "$((OPTIND-1))" # get rid of everything just processed leaving anything left as $1
if [ "$1" != "" ] 
then 
	show_help # shouldn't be anything else so show help if there is
	exit 1
fi

if ! [ -d $working_dir/ ]
then
	echo "$working_dir is not an existing directory, so the silentcast directory can't be there" \
	| yad --text-info --wrap --on-top --center --window-icon="$doc_dir/record.png" --title="Error" --text="<b>SILENTCAST ? </b>"
	exit -1
fi

[ $castnum = 1 ] && cd $working_dir/silentcast
[ $castnum = 2 ] && cd $working_dir/silentcast/silentcast

if  (($fps == 0)) 
then
	if ! [ -f temp.mkv ]
	then
		echo "temp.mkv not found, so can't convert it to vid.mp4" \
		| yad --text-info --wrap --on-top --center --window-icon="$doc_dir/record$castnum".png \
		--title="Error" --text="<b>SILENTCAST $castnum </b>"
		exit -1
	fi
else
	if ! [ -f ew-[0-9][0-9][0-9].png ] 
	then
		echo "ew-???.png not found, so can't convert them to vid.mp4" \
		| yad --text-info --wrap --on-top --center --window-icon="$doc_dir/record$castnum".png \
		--title="Error" --text="<b>SILENTCAST $castnum </b>"
		exit -1
	fi
fi

if [ "$XDG_CURRENT_DESKTOP" = "GNOME"  ] 
then
	nautilus ./ & file_browserPID=$! # for some reason xdg-open doesn't work inside this script in Gnome
else
	xdg-open ./ 
fi

find -maxdepth 1 -name 'vid.mp4' -delete

if (($fps == 0))
then
	# -pix_fmt yuv420p was suggested by ffmpeg itself for max compatibility and -vf ... is because dim have to be even
	ffmpeg -i $silentcast_dir/temp.mkv -pix_fmt yuv420p -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" $silentcast_dir/vid.mp4 \
		| yad --progress --on-top --center --window-icon="$doc_dir/record$castnum".png \
		--text="<b>SILENTCAST $castnum </b> \nCreating vid.mp4 from temp.mkv" --pulsate --auto-close
else
	ffmpeg -r $fps -i $silentcast_dir/ew-[0-9][0-9][0-9].png -pix_fmt yuv420p -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" \
		$silentcast_dir/vid.mp4 \
		| yad --progress --on-top --center --window-icon="$doc_dir/record$castnum".png \
		--text="<b>SILENTCAST $castnum </b> \nCreating vid.mp4 from ew-???.png" --pulsate --auto-close
	[ rm_png = true ] && rm ew-[0-9][0-9][0-9].png
fi

xdotool key 'F5' # in testing, Dolphin used by KDE needs this sometimes
exit 0

# End of file
