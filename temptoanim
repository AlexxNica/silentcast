#!/bin/bash
# $1 is silentcast#
# $2 is fps

# Usage info
show_help() {
cat << EOF
temptoanim converts temp.mkv to anim.gif

Usage: temptoanim silentcast# fps

    silentcast# should be either 1 or 2, but can be anything

                    1: tries to convert ~/silentcast/temp.mkv
		not 1: tries to convert ~/silentcast/silentcast/temp.mkv

    fps is the frames per second and should match the fps used to
        create temp.mkv.

    temptoanim doesn't verify the actual fps in temp.mkv, and there
    is no default for either arg: both are required.

There are some dialogues that come up, and it's important to read
and understand them. View /usr/share/doc/silentcast/README.md with
a markdown viewer and get an animated gif demo made with silentcast,
as well as a step by step guide and a list of tips.
EOF
}
if [ "$#" -ne 2 ]
then
	show_help
	exit 0
fi

unset cut group count
cd
if [ "$1" -eq 1 ]
then 
	cd ~/silentcast
	xdg-open ./
else
	cd ~/silentcast/silentcast
	xdg-open ./
fi
if [ -f anim.gif ]
then
	rm anim.gif
fi
if ls *png &> /dev/null
then
	rm *png
fi
ffmpeg -i temp.mkv -r $2 -an ew-%03d.png | yad --progress --window-icon="media-record" --text="silentcast "$1": Creating images from temp.mkv" --pulsate --auto-close
[ "$?" -ne "0" ] && exit 1 #Cancel was clicked
while ! [ -f anim.gif ]
do
    cut=`yad --entry --window-icon="media-record"\
        --title="SILENTCAST "$1": Prepare images before converting to Anim.gif" \
        --text="Manually delete or otherwise manipulate the images and click OK,\n   Or \nEnter any positive integer less than the total number of images. It works like this:\n0 do nothing\n1 delete every other\n2 delete 2 out of every 3\n3 delete 3 out of every 4 ..." \
        --entry-text="0"`
[ "$?" -ne "0" ] && exit 1 #Cancel was clicked
    group=$((cut + 1))
    if [ "$group" -gt 1 ]
    then
    	count=0
    	for f in *png
    	do
    		    count=$((count + 1))
    		    if ! [ `expr $count % $group` = 1 ]
    		    then
    			    rm $f
    		    fi
    	done
    fi
    convert -adjoin -delay "$cut"x"$2" -layers optimize *png anim.gif | \
	    yad --progress --window-icon="media-record" --text="silentcast "$1": Replacing images with anim.gif..." --pulsate --auto-close
[ "$?" -ne "0" ] && exit 1 #Cancel was clicked
    if ! [ -f anim.gif ]
    then 
    	  yad --error --window-icon="media-record" --text="silentcast "$1": Too many images for the available memory - convert crashed. Try closing other applications, creating a swap file, or removing unecessary images."
[ "$?" -ne "0" ] && exit 1 #Cancel was clicked
    else
    	  rm *png
    fi
done

